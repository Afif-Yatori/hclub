
import base64
eval (compile (base64.b64decode (b'
# Now that you are here, you know what base64 means ;-) 
# Just FEEDC0DE for the solution to this level!

import base64
from Crypto.Cipher import AES
from Crypto.Hash import SHA256
import datetime 


    
def decrypt(key, source, decode=True):
    if decode:
        source = base64.b64decode(source.encode("latin-1"))
    key = SHA256.new(key).digest()  # use SHA-256 over our key to get a proper-sized AES key
    IV = source[:AES.block_size]  # extract the IV from the beginning
    decryptor = AES.new(key, AES.MODE_CBC, IV)
    data = decryptor.decrypt(source[AES.block_size:])  # decrypt
    padding = data[-1]  # pick the padding value from the end; Python 2.x: ord(data[-1])
    if data[-padding:] != bytes([padding]) * padding:  # Python 2.x: chr(padding) * padding
        raise ValueError("Invalid padding...")
    return data[:-padding]  # remove the padding
    
puzzle = ("""--------------------------------------------------------
This is the entrance to:

    _/          _/_/_/  _/            _/
   _/_/_/    _/        _/  _/    _/  _/_/_/
  _/    _/  _/        _/  _/    _/  _/    _/
 _/    _/  _/        _/  _/    _/  _/    _/
_/    _/    _/_/_/  _/    _/_/_/  _/_/_/

Proceed if you dare!
--------------------------------------------------------
""")
                
print (puzzle) 
import random, time
deadline = datetime.datetime(year = 2020, month = 8, day = 30, hour = 23, minute = 59, second = 59)
today = datetime.datetime.now()
print("\nRemaining time until application deadline:", deadline-today)
if deadline<today:
    raise Exception("Deadline is passed")
try:
    pw = input ("Provide key to next level: ")
    print ("processing", end =".")
    for x in range (random.randint (8, 12)):
        time.sleep (random.random ())
        print ("."*x, end ="")
    eval(compile(decrypt(pw.encode('utf-8'), "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"),'<string>','exec'))
except:
        print ("ouch!")
        print("Nice try, better luck next time.")
    '),'<string>','exec'))
#hint: requires https://pypi.org/project/pycryptodome/
