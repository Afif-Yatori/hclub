#pip install pycryptodome

import base64
code = b'#Just FEED_C0DE for the solution to this level!

import base64
from Crypto.Cipher import AES
from Crypto.Hash import SHA256

    
def decrypt(key, source, decode=True):
    if decode:
        source = base64.b64decode(source.encode("latin-1"))
    key = SHA256.new(key).digest()  # use SHA-256 over our key to get a proper-sized AES key
    IV = source[:AES.block_size]  # extract the IV from the beginning
    decryptor = AES.new(key, AES.MODE_CBC, IV)
    data = decryptor.decrypt(source[AES.block_size:])  # decrypt
    padding = data[-1]  # pick the padding value from the end; Python 2.x: ord(data[-1])
    if data[-padding:] != bytes([padding]) * padding:  # Python 2.x: chr(padding) * padding
        raise ValueError("Invalid padding...")
    return data[:-padding]  # remove the padding
    
puzzle = ("""This is the entrance to:
   __   _____ __       __     __ __
  / /  / ___// /__ __ / /    / //_/____ ___  __ _   ___
 / _ \/ /__ / // // // _ \  / ,<  / __// -_)/  ' \ (_-<
/_//_/\___//_/ \_,_//_.__/ /_/|_|/_/   \__//_/_/_//___/
Proceed if you dare!
""")
                
print (puzzle) 
import random, time
try:
    pw = input ("Provide key to next level: ")
    print ("processing", end =".")
    for x in range (random.randint (8, 12)):
        time.sleep (random.random ())
        print ("."*x, end ="")
    eval(compile(decrypt(pw.encode('utf-8'), "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"),'<string>','exec'))
except:
        print ("ouch!")
        print("Nice try, better luck next time.")
    '
eval (compile (base64.b64decode (code), '<string>', 'exec'))